import datetime
import logging
import os
import platform
from pathlib import Path

import hikari


async def backup_database(dsn: str) -> hikari.File:
    """Attempts to back up the database via pg_dump into the db_backup directory"""
    logging.info("Performing daily database backup...")

    username = dsn.split(":")[1][2:]
    password = dsn.split(":")[2].split("@")[0]
    hostname = dsn.split(":")[2].split("@")[1]
    port = dsn.split(":")[3].split("/")[0]
    db_name = dsn.split(":")[3].split("/")[1]

    filepath = os.path.dirname(os.path.realpath(__file__))

    if not os.path.isdir(os.path.join(filepath, "db_backup")):
        os.mkdir(os.path.join(filepath, "db_backup"))

    def generate_pgpass(filepath: str):
        pgpass_contents = f"#Automatically generated by Sned-Bot\n{hostname}:{port}:{db_name}:{username}:{password}"
        file = open(filepath, "w")
        file.write(pgpass_contents)
        file.close()

    if platform.system() == "Windows":
        if not os.path.isfile(os.path.expandvars(r"%APPDATA%\postgresql\pgpass.conf")):
            generate_pgpass(os.path.expandvars(r"%APPDATA%\postgresql\pgpass.conf"))
    else:
        if not os.path.isfile(os.path.join(Path.home(), ".pgpass")):
            generate_pgpass(os.path.join(Path.home(), ".pgpass"))
            os.system("chmod 600 ~/.pgpass")

    now = datetime.datetime.now(datetime.timezone.utc)

    filename = f"{now.year}-{now.month}-{now.day}_{now.hour}_{now.minute}_{now.second}.sql"
    backup_path = os.path.join(filepath, "db_backup", filename)

    os.system(f"pg_dump -c -U {username} -d {db_name} -h {hostname} -p {port} -w > {backup_path}")

    logging.info("Database backup complete!")
    return hikari.File(backup_path)
